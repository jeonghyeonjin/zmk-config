/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define ACCENT 5
		#define SETTINGS 6
// -----------------

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

&sk {
		// don't release mods on other mods presses
    ignore-modifiers;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    combos {
        compatible = "zmk,combos";
		// both right thumb keys
			combo_accent {
			timeout-ms = <100>;
			key-positions = <32 33>;
			bindings = <&mo ACCENT>;
			};
		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <100>;
			key-positions = <31 33>;
			bindings = <&mo SYM2>;
		};
		// both left thumb keys
		combo_settings {
			timeout-ms = <100>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
		combo_tab {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp TAB>;
		};
		combo_undo {
			timeout-ms = <50>;
			key-positions = <21 22>;
			bindings = <&kp LC(Z)>;
		};
		combo_1 {
			timeout-ms = <50>;
			key-positions = <0 10>;
			bindings = <&kp N1>;
		};
		combo_2 {
			timeout-ms = <50>;
			key-positions = <1 11>;
			bindings = <&kp N2>;
		};
		combo_3 {
			timeout-ms = <50>;
			key-positions = <2 12>;
			bindings = <&kp N3>;
		};
		combo_4 {
			timeout-ms = <50>;
			key-positions = <3 13>;
			bindings = <&kp N4>;
		};
		combo_5 {
			timeout-ms = <50>;
			key-positions = <4 14>;
			bindings = <&kp N5>;
		};
		combo_6 {
			timeout-ms = <50>;
			key-positions = <5 15>;
			bindings = <&kp N6>;
		};
		combo_7 {
			timeout-ms = <50>;
			key-positions = <6 16>;
			bindings = <&kp N7>;
		};
		combo_8 {
			timeout-ms = <50>;
			key-positions = <7 17>;
			bindings = <&kp N8>;
		};
		combo_9 {
			timeout-ms = <50>;
			key-positions = <8 18>;
			bindings = <&kp N9>;
		};
		combo_0 {
			timeout-ms = <50>;
			key-positions = <9 19>;
			bindings = <&kp N0>;
		};
		combo_equal {
			timeout-ms = <50>;
			key-positions = <15 16>;
			bindings = <&kp EQUAL>;
		};
		combo_minus {
			timeout-ms = <50>;
			key-positions = <25 26>;
			bindings = <&kp MINUS>;
		};
		combo_lpar {
			timeout-ms = <50>;
			key-positions = <2 3>;
			bindings = <&kp LPAR>;
		};
		combo_lbrc {
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&kp LBRC>;
		};
		combo_lbkt {
			timeout-ms = <50>;
			key-positions = <22 23>;
			bindings = <&kp LBKT>;
		};
		combo_rpar {
			timeout-ms = <50>;
			key-positions = <6 7>;
			bindings = <&kp RPAR>;
		};
		combo_rbrc {
			timeout-ms = <50>;
			key-positions = <16 17>;
			bindings = <&kp RBRC>;
		};
		combo_rbkt {
			timeout-ms = <50>;
			key-positions = <26 27>;
			bindings = <&kp RBKT>;
		};
		combo_sqt {
			timeout-ms = <50>;
			key-positions = <17 18>;
			bindings = <&kp SQT>;
		};
    };

    keymap {
				compatible = "zmk,keymap";

        // Base alpha layer
				default_layer {
						label = "Base";
						bindings = <
						&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P 
						&mt LSHIFT A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L &mt LSHIFT SEMI
						&mt LCTRL Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &mt LCTRL FSLH
								&kp LALT &kp SPACE &mt EXT SPACE &kp ESC            &kp B &mt SYM RET &kp RET &kp BSPC
						>;
				};

        // Numbers and high frequency symbols
				sym_layer {
						label = "Sym.";
						bindings = <
						&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
						&kp IT_LESS &kp IT_USD &kp IT_LPAR &kp IT_LBRC &kp IT_LBKT  &kp IT_EQL &kp IT_QUES &kp IT_SQUOT &kp IT_MINUS &kp IT_AST
						&kp IT_GREAT &kp IT_PERC &kp IT_RPAR &kp IT_RBRC &kp IT_RBKT 	&kp IT_AT &kp IT_EXCL &kp IT_DQUOT &kp IT_PLUS &kp IT_FSLH
																											&kp B &kp B		&mo FNC  &mo SYM2       &trans &trans &kp B &kp B
						>;
				};

        // Main modifiers and arrow keys
		    ext_layer {
						label = "Mods";
						bindings = <
						&kp ESC  &trans &trans  &trans  &trans    			        &kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
						&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
						&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
																			&kp B &kp B		&trans &kp LCTRL    &kp ENTER  &mo FNC &kp B &kp B
						>;
				};

        // Function keys with modifiers
				fnc_layer {
						label = "FRow";
						bindings = <
						&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
						&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
						&none &none &none &none &none				          &none &none &none &none &none 
																&kp B &kp B		&none &none              &none &none  &kp B &kp B
						>;
				};

        // Low frequency symbols.
				symbols_2_layer {
						label = "Sym.2";
						bindings = <
						&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none 
						&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &none &none &none &none &none
						&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
																											&kp B &kp B			&none &none        	&none &none &kp B &kp B
						>;
				};

        // Used to type regional accents.
				accent_layer {
						label = "Accent";
						bindings = <
						&none &none &none &kp IT_CEGR &none                         &none &none &none &none &none 
						&kp IT_AGRV &kp IT_IGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU &none &none &none &none &none
						&none &none &none &kp IT_UGRV &none                         &none &none &none &none &none
														&kp B &kp B	&none &none                         &none &none &kp B &kp B
						>;
				};

        // Used to change the keyboard's settings.
				settings_layer {
						label = "Sett.";
						bindings = <
						&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
						&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
						&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
													&kp B &kp B		&none &none                         &none &none &kp B &kp B
						>;
				};
		};
};
